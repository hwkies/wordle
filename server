#!/usr/bin/env python3

import socket
import json
import os
import sys
from random import randint

#create an accessible array of words from the wordlist
wordlist = open(os.path.join(sys.path[0], "wordlist.txt"))
words = wordlist.readlines()
for word in words:
    word = word[:5]

#get a random word in the available words
def getRandWord():
    #number of words in the list
    numWords = len(words)
    #random word in the list of words
    randNum = randint(1, numWords)
    randWord = words[randNum - 1]
    return randWord

hostname = "127.0.0.1"
mysocket = None
port = 27993
answer = getRandWord()
guessList = []

def typeParser(msg):
    if msg["type"] == "hello":
        sendStart()
        print("Game started")
        return True
    # elif msg["type"] == "guess" and msg["word"] not in words:
    #     retryMsg = {"type": "retry", "guesses": guessList}
    #     mysocket.send(json.dumps(retryMsg).encode())
    #     print("%s: not in wordlist" % msg["word"])
    #     return True
    elif msg["type"] == "guess" and msg["word"] != answer:
        marks = getMarks(msg["word"])
        guessList.append({"word": msg["word"], "marks": marks})
        retryMsg = {"type": "retry", "guesses": guessList}
        print(retryMsg)
        mysocket.send(json.dumps(retryMsg).encode())
        return True
    elif msg["type"] == "guess" and msg["word"] == answer:
        byeMsg = {"type": "bye", "answer": answer, "numGuesses": len(guessList)+1}  
        print(byeMsg)  
        mysocket.send(json.dumps(byeMsg).encode())
        return False
        
def sendStart():
    startMsg = {"type": "start"}
    print(startMsg)
    mysocket.send(json.dumps(startMsg).encode())

def getMarks(word):
    marks = [0, 0, 0, 0, 0]
    for idx in range(5):
        if word[idx] == answer[idx]:
            marks[idx] = 2
        elif word[idx] != answer[idx] and word[idx] in answer:
            marks[idx] = 1
    return marks

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    s.bind((hostname, port))
    s.listen()
    print("Socket connection opened and listening")
    mysocket, addr = s.accept()
    with mysocket:
        while True:
            data = json.loads(mysocket.recv(25600).decode())
            print(data)
            if typeParser(data) == False:
                break  
        mysocket.shutdown(socket.SHUT_RDWR)
        mysocket.close()
    s.shutdown(socket.SHUT_RDWR)
    s.close()  